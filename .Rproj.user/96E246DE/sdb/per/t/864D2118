{
    "collab_server" : "",
    "contents" : "context(\"REMIND reporting\")\n\ntest_that(\"Test if REMIND reporting is produced as it should\", {\n  \n  library(gdx)\n\n  runParallelTests <- function(gdxs=NULL,cores=0,par=FALSE){\n    \n    new_gdxs <- NULL\n    if (is.null(gdxs) & file.exists(\"/p/projects/\")) {\n      gdxs <- system2(\"find\",\"/p/projects/remind/runs/r* -name fulldata.gdx\",stdout=T,stderr = FALSE)\n      gdxs <- grep(\"magpie\",gdxs,v=T,invert=T,ignore.case = T)\n      gd <- length(gdxs)\n      gdxs <- gdxs[c(gd)] # floor(gd/2),floor(3*gd/4),\n      gdxs <- c(gdxs,\"/p/projects/remind/runs/0AA_DONTDELETEME_MO/fulldata.gdx\")\n      brnam <- unlist(strsplit(gdxs,split=\"/\"))\n      new_gdxs <- paste0(brnam[grep(\"fulldata.gdx\",brnam)-1],\".gdx\")\n      file.copy(gdxs,new_gdxs,overwrite = TRUE)\n      gdxs <- new_gdxs\n    }\n    i <- NULL\n    # if (Sys.info()[\"sysname\"]==\"Linux\") {\n    #   par <- TRUE\n    #   library(foreach)\n    #   doMC::registerDoMC(cores = 2)\n    # }\n    if (par) {\n      foreach (i = gdxs) %dopar% {\n        cat(paste0(i,\"\\n\"))\n        a <- convGDX2MIF(i)\n        cat(\"\\n\")\n      }\n    } else {\n      for (i in gdxs) {\n        cat(paste0(i,\"\\n\"))\n        a <- convGDX2MIF(i)\n        cat(\"\\n\")\n      }\n    }\n    unlink(new_gdxs)\n  }\n\n  expect_error(runParallelTests(),regexp = NA)\n\n})\n",
    "created" : 1516714056247.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1029150904",
    "id" : "864D2118",
    "lastKnownWriteTime" : 1533203251,
    "last_content_update" : 1533203251,
    "path" : "~/Documents/work/libraries/remind/tests/testthat/test-convGDX2mif.R",
    "project_path" : "tests/testthat/test-convGDX2mif.R",
    "properties" : {
    },
    "relative_order" : 16,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}