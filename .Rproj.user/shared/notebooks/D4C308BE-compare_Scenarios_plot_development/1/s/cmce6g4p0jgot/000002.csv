"0","# read model results "
"0","data <- NULL"
"0","for(i in 1:length(mif)){"
"0","  data_new <- read.report(mif[i],as.list=FALSE)"
"0","  if (magclass::getNames(data_new,fulldim = TRUE)[[""scenario""]] %in% magclass::getNames(data,fulldim = TRUE)[[""scenario""]]) magclass::getNames(data_new) <- gsub(magclass::getNames(data_new,fulldim = TRUE)[""scenario""],paste0(magclass::getNames(data_new,fulldim = TRUE)[""scenario""],i),magclass::getNames(data_new))"
"0","  if(all(getRegions(data) %in% getRegions(data_new))) {"
"0","    data <- mbind(data,data_new)"
"0","  } else {"
"0","    if(is.null(reg)){"
"0","      stop(""the regional aggregation of the results are different, you might use reg='all_reg'"")"
"0","    } else if(reg==""all_reg""){"
"0","      if(all(getRegions(data_new) %in% getRegions(data))) {"
"0","        # expand data_new by old regions from data"
"0","        oldReg         <- getRegions(data)[-which(getRegions(data) %in% getRegions(data_new))]"
"0","        dummy_data_new <- new.magpie(oldReg,getYears(data_new),getNames(data_new),fill=NA)"
"0","        data_new       <- mbind(data_new,dummy_data_new)"
"0","        # compine old and new data"
"0","        data <- mbind(data,data_new) "
"0","      } else {"
"0","        # expand data by new regions from data_new"
"0","        newReg     <- getRegions(data_new)[-which(getRegions(data_new) %in% getRegions(data))]"
"0","        dummy_data <- new.magpie(newReg,getYears(data),getNames(data),fill=NA)"
"0","        data       <- mbind(data,dummy_data)"
"0","        # expand data_new by old regions from data"
"0","        oldReg         <- getRegions(data)[-which(getRegions(data) %in% getRegions(data_new))]"
"0","        dummy_data_new <- new.magpie(oldReg,getYears(data_new),getNames(data_new),fill=NA)"
"0","        data_new       <- mbind(data_new,dummy_data_new)"
"0","        # compine old and new data"
"0","        data <- mbind(data,data_new) "
"0","      }"
"0","      "
"0","    } else { "
"0","      stop(""the regional aggregation of the results are different, you might use reg='all_reg'"")"
"0","    }"
"0","  }  "
"0","}"
"0","if (!(is.null(reg))) {"
"0","  if (!reg==""all_reg"") {"
"0","     data <- data[reg,y,]"
"0","  } else {"
"0","     data <- data[,y,]"
"0","  }  "
"0","} else {"
"0","  data <- data[,y,]"
"0","}"
"0","# delete ""+"" and ""++"" from variable names"
"0","data <- deletePlus(data)"
"0","# read historical data"
"0","hist <- read.report(hist,as.list=FALSE)"
"2","Error in path.expand(paths) : invalid 'path' argument
"
